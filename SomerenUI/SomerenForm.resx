<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>